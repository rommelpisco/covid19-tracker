{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","showFlag","code","idx","a","getFlag","res","console","log","flag","data","state","items","img","setState","loadData","getData","getTimeline","timeline","myData","sort","b","name","localeCompare","map","item","i","opt","forEach","element","dropDownEle","label","value","push","options","selected","selectedOption","sortBy","selectedSortBy","handleChange_Country","bind","handleChange_sortBy","this","Promise","resolve","axios","get","then","event","latest_data","toLowerCase","nStr","x","split","x1","x2","length","rgx","test","replace","date","moment","format","className","style","paddingTop","backgroundColor","color","paddingBottom","formatDate","Date","fontSize","Card","Header","Body","Row","Col","textAlign","paddingRight","xs","lg","paddingLeft","Badge","variant","addCommas","confirmed","new_confirmed","deaths","new_deaths","recovered","new_recovered","sm","FormGroup","width","isMulti","onChange","overflowY","flex","list","md","population","toFixed","today","calculated","death_rate","recovery_rate","some","src","alt","height","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8fe731ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Badge, Card, Col, FormGroup, Row } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Select from 'react-select';\n\n  class App extends Component {  \n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        items: [],\n        selected: \"All\",\n        options: [],\n        selectedOption: [],\n        timeline: [],\n        sortBy: [\n          {label: 'Confirmed', value: 'Confirmed'},\n          {label: 'Deaths', value: 'Deaths'},\n          {label: 'Recovered', value: 'Recovered'},\n          {label: 'Country', value: 'Country'},\n        ],\n        selectedSortBy: [],\n      }\n      this.handleChange_Country = this.handleChange_Country.bind(this);\n      this.handleChange_sortBy = this.handleChange_sortBy.bind(this);\n    }\n\n    componentDidMount(){\n      this.loadData()\n    }\n\n    getData(){\n      return new Promise(resolve => {\n         axios.get(\"https://corona-api.com/countries\").then((res) => { resolve(res.data); })\n      })\n    }\n\n    getTimeline(){\n      return new Promise(resolve => {\n         axios.get(\"https://corona-api.com/timeline\").then((res) => { resolve(res.data); })\n      })\n    }\n\n    getFlag(code,idx){\n     return new Promise(resolve => {\n        axios.get(\"https://restcountries.eu/rest/v2/alpha/\" + code).then((res) => { resolve(res.data); })\n     });\n    }\n\n    showFlag = async (code,idx) => {\n      const res = await this.getFlag(code,idx);\n      console.log(res.flag)\n      let data = {...this.state.items}\n      data[idx] = {...this.state.items[idx], img: res.flag}\n      console.log(data)\n      this.setState({items: data})\n      // return(<img src={res.flag}  alt=\"rommel\" className=\"img-responsive\" style={{height:'20px'}}> </img>)\n    }\n    \n    loadData  = async () => {\n      const res = await this.getData();\n      const timeline = await this.getTimeline();\n      console.log(res)\n      console.log(res.data)\n      console.log(timeline.data)\n      let myData = res.data\n\n      myData.sort((a, b) => a.name.localeCompare(b.name))\n      .map((item, i) => { \n        return item;\n        \n      });\n\n      let opt = [];\n      myData.forEach((element,i) => {\n        let dropDownEle = { label: element.name, value: element.code };\n        opt.push(dropDownEle);\n      });\n\n      this.setState({items: myData, options: opt, timeline})\n      console.log(myData)\n    }\n\n    handleChange_Country(event){\n      if(event)\n        this.setState({selected: event.label, selectedOption: event});  \n      else\n        this.setState({selected: \"All\", selectedOption: []}); \n    }\n    handleChange_sortBy(event){\n      if(event)\n        this.setState({selectedSortBy: event});  \n      else\n        this.setState({selectedSortBy: []}); \n      if(event.label === \"Country\"){\n        let myData = this.state.items.sort((a, b) => a.name.localeCompare(b.name))\n        .map((item, i) => item);\n        this.setState({items: myData})\n      }\n      else {\n        let myData = this.state.items.sort((a, b) => { \n          return b.latest_data[event.value.toLowerCase()] - a.latest_data[event.value.toLowerCase()]\n        } )\n        .map((item, i) => item);\n        console.log(myData)\n        this.setState({items: myData, selected: \"All\"})\n      }\n\n    }\n    addCommas(nStr){\n      nStr += '';\n      var x = nStr.split('.');\n      var x1 = x[0];\n      var x2 = x.length > 1 ? '.' + x[1] : '';\n      var rgx = /(\\d+)(\\d{3})/;\n      while (rgx.test(x1)) {\n       x1 = x1.replace(rgx, '$1' + ',' + '$2');\n      }\n      return x1 + x2;\n     }\n\n     formatDate(date){\n      return moment(date).format('DD-MMM-YYYY LTS');\n     }\n\n  render() {\n  return (\n    <div className=\"container\">\n      <header className=\"App-header\" style={{paddingTop: '15px', backgroundColor: 'white'}}>\n        <div className=\"jumbotron\" style={{color: 'white', backgroundColor: 'darkslategray', paddingTop: '15px', paddingBottom: '5px'}}>\n        <p>\n          COVID19 updates as of {this.formatDate(new Date())}\n        </p>\n        <div style={{color: 'darkblue', fontSize: 'initial', paddingBottom: '15px'}}>\n          <Card >\n            <Card.Header>Worldwide</Card.Header>\n            <Card.Body>\n              <Row>\n                <Col style={{ textAlign: 'right', paddingRight: '5px'}} xs='5' lg='6'>\n                  <div>Confirmed:</div>\n                </Col>\n                <Col style={{textAlign: 'left', paddingRight: '0px', paddingLeft: '0px'}}>\n                  <div> <Badge variant=\"warning\">{this.addCommas(this.state.timeline && this.state.timeline.data && this.state.timeline.data[0].confirmed)}</Badge>\n                  {this.state.timeline && this.state.timeline.data  && this.state.timeline.data[0].new_confirmed > 0 && <Badge variant=\"secondary\"> +{this.addCommas(this.state.timeline.data[0].new_confirmed)}</Badge>}\n                </div>\n                </Col>\n              </Row> \n              <Row>\n                <Col style={{ textAlign: 'right', paddingRight: '5px'}} xs='5' lg='6'>\n                  <div>Deaths:</div>\n                </Col>\n                <Col style={{textAlign: 'left', paddingRight: '0px', paddingLeft: '0px'}}>\n                  <div>\n                    <Badge variant=\"danger\">{this.addCommas(this.state.timeline && this.state.timeline.data && this.state.timeline.data[0].deaths)}</Badge>\n                    {this.state.timeline && this.state.timeline.data  && this.state.timeline.data[0].new_deaths > 0 && <Badge variant=\"secondary\"> +{this.addCommas(this.state.timeline.data[0].new_deaths)}</Badge>}\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col style={{ textAlign: 'right', paddingRight: '5px'}} xs='5' lg='6'>\n                  <div>Recovered:</div>\n                </Col>\n                <Col style={{textAlign: 'left', paddingRight: '0px', paddingLeft: '0px'}}>\n                  <div>\n                    <Badge variant=\"success\">{this.addCommas(this.state.timeline && this.state.timeline.data && this.state.timeline.data[0].recovered)}</Badge>\n                    {this.state.timeline && this.state.timeline.data  && this.state.timeline.data[0].new_recovered > 0 && <Badge variant=\"secondary\"> +{this.addCommas(this.state.timeline.data[0].new_recovered)}</Badge>}\n                  </div>\n                </Col>\n              </Row>\n                \n            </Card.Body>\n          </Card>\n        </div>\n        <Row>\n          <Col lg='6' sm='12'>\n        <FormGroup style={{width: '-webkit-fill-available'}}>\n          <label>Countries</label>\n          <span style={{color: 'blue'}}><Select isMulti options={this.state.options} onChange={this.handleChange_Country} value={this.state.selectedOption} /></span>\n        </FormGroup>\n        </Col>\n        <Col lg='6' sm='12'>\n        <FormGroup style={{width: '-webkit-fill-available'}}>\n          <label>Sort by</label>\n          <span style={{color: 'blue'}}><Select options={this.state.sortBy} onChange={this.handleChange_sortBy} value={this.state.selectedSortBy} /></span>\n        </FormGroup>\n        </Col>\n        </Row>\n        </div>\n      </header> \n        <div style={{overflowY: 'scroll', flex: 1}}> \n        {this.state.selected === \"All\" ?\n        <div>\n        {this.state.items.map((list,idx) => {\n          if(list.latest_data)\n          return (\n            <div style={{paddingBottom: '15px'}}>\n              <Card>\n                <Card.Header>{list.name}</Card.Header>\n                <Card.Body>\n                  <Row>\n                    <Col style={{ textAlign: 'right', paddingLeft: '0px'}}  xs='7' lg='6' md='6'>\n                      <div>\n                        Confirmed {' '}\n                        <label>({(list.latest_data.confirmed && list.latest_data.confirmed / list.population * 100).toFixed(3)}%)</label>\n                      </div>\n                    </Col>\n                    <Col style={{textAlign: 'left', paddingRight: '0px'}}>\n                      <div> \n                        <Badge variant=\"warning\">{this.addCommas(list.latest_data.confirmed)}</Badge>\n                        {list.today.confirmed > 0 && <Badge variant=\"secondary\"> +{this.addCommas(list.today.confirmed)}</Badge>}\n                      </div>\n                    </Col>\n                  </Row> \n                  <Row>\n                    <Col style={{ textAlign: 'right', paddingLeft: '0px'}}  xs='7' lg='6' md='6'>\n                      <div>Deaths {' '}\n                      <label> ({list.latest_data.calculated.death_rate && list.latest_data.calculated.death_rate.toFixed(2) }%)</label>\n                      </div>\n                    </Col>\n                    <Col style={{textAlign: 'left', paddingRight: '0px'}}>\n                      <div>\n                        <Badge variant=\"danger\">{this.addCommas(list.latest_data.deaths)}</Badge>\n                        {list.today.deaths > 0 && <Badge variant=\"secondary\"> +{list.today.deaths}</Badge>}\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col style={{ textAlign: 'right', paddingLeft: '0px'}} xs='7' lg='6' md='6'>\n                      <div>Recovered {' '}\n                      <label> ({list.latest_data.calculated.recovery_rate && list.latest_data.calculated.recovery_rate.toFixed(2) }%)</label>\n                      </div>\n                    </Col>\n                    <Col style={{textAlign: 'left', paddingRight: '0px'}}>\n                      <div>\n                        <Badge variant=\"success\">{this.addCommas(list.latest_data.recovered)}</Badge>\n                        {list.today.recovered > 0 && <Badge variant=\"secondary\"> +{list.today.recovered}</Badge>}\n                      </div>\n                    </Col>\n                  </Row>\n                </Card.Body>\n              </Card>\n            </div>\n            \n            );\n        })}\n      </div>\n      :\n      <div>\n      {this.state.items.map((list,idx) => {\n        if(this.state.selectedOption.some(x => x.label === list.name)){\n          console.log(list)\n          return (\n            <div style={{paddingBottom: '15px'}}>\n              <Card style={{paddingLeft: '0px'}}>\n                {/* {this.showFlag(list.code,idx)} */}\n                <Card.Header>{list.name}  <img src={`https://www.countryflags.io/${list.code}/shiny/64.png`} alt=\"rommel\" className=\"img-responsive\" style={{height:'30px', paddingLeft: '10px'}}/></Card.Header>\n                {/* <Card.Header>{list.name} <img src={'https://restcountries.eu/data/phl.svg'} alt=\"rommel\" className=\"img-responsive\" style={{height:'20px'}}/></Card.Header> */}\n                <Card.Body>\n                  <Row>\n                    <Col style={{ textAlign: 'right', paddingLeft: '0px'}} xs='7' lg='6' md='6'>\n                      <div>\n                        Confirmed {' '}\n                        <label>({(list.latest_data.confirmed && list.latest_data.confirmed / list.population * 100).toFixed(3)}%)</label>\n                      </div>\n                    </Col>\n                    <Col style={{textAlign: 'left', paddingRight: '0px'}}>\n                      <div> \n                        <Badge variant=\"warning\">{this.addCommas(list.latest_data.confirmed)}</Badge>\n                        {list.today.confirmed > 0 && <Badge variant=\"secondary\"> +{this.addCommas(list.today.confirmed)}</Badge>}\n                      </div>\n                    </Col>\n                  </Row> \n                  <Row>\n                    <Col style={{ textAlign: 'right', paddingLeft: '0px'}}  xs='7' lg='6' md='6'>\n                      <div>Deaths {' '}\n                      <label> ({list.latest_data.calculated.death_rate && list.latest_data.calculated.death_rate.toFixed(2) }%)</label>\n                      </div>\n                    </Col>\n                    <Col style={{textAlign: 'left', paddingRight: '0px'}}>\n                      <div>\n                        <Badge variant=\"danger\">{this.addCommas(list.latest_data.deaths)}</Badge>\n                        {list.today.deaths > 0 && <Badge variant=\"secondary\"> +{this.addCommas(list.today.deaths)}</Badge>}\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col style={{ textAlign: 'right', paddingLeft: '0px'}} xs='7' lg='6' md='6'>\n                      <div>Recovered {' '}\n                      <label> ({list.latest_data.calculated.recovery_rate && list.latest_data.calculated.recovery_rate.toFixed(2) }%)</label>\n                      </div>\n                    </Col>\n                    <Col style={{textAlign: 'left', paddingRight: '0px'}}>\n                      <div>\n                        <Badge variant=\"success\">{this.addCommas(list.latest_data.recovered)}</Badge>\n                        {list.today.recovered > 0 && <Badge variant=\"secondary\"> +{this.addCommas(list.today.recovered)}</Badge>}\n                      </div>\n                    </Col>\n                  </Row>\n                    \n                </Card.Body>\n              </Card>\n            </div>\n            );\n        }else return <div></div>\n        })}\n      </div>\n        }\n      </div>\n      \n    </div>\n  );\n}}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}